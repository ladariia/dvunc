{"ast":null,"code":"import axios from 'axios';\nconst $host = axios.create({\n  baseURL: 'http://localhost:3000/'\n});\nconst $authHost = axios.create({\n  baseURL: 'http://localhost:3000/'\n});\n\n//для 2 необходимо автоматически подставлять токен каждому запросу\n//для этого существую интерцепторы - фия, кя параметром принимает конфиг\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem('token ')}`;\n  return config;\n};\n$authHost.interceptors.request.use(authInterceptor); //будет отрабатывать перед каждым запросом и подставлять токен в хэдер авторизэйшен\n\nexport { $host, $authHost };","map":{"version":3,"names":["axios","$host","create","baseURL","$authHost","authInterceptor","config","headers","authorization","localStorage","getItem","interceptors","request","use"],"sources":["/Users/darialadilova/Desktop/AUTH/client/src/http/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst $host = axios.create({\n    baseURL: 'http://localhost:3000/'\n})\n\nconst $authHost = axios.create({\n    baseURL: 'http://localhost:3000/'\n})\n\n//для 2 необходимо автоматически подставлять токен каждому запросу\n//для этого существую интерцепторы - фия, кя параметром принимает конфиг\nconst authInterceptor = config => {\n    config.headers.authorization = `Bearer ${localStorage.getItem('token ')}`\n    return config\n}\n\n$authHost.interceptors.request.use(authInterceptor) //будет отрабатывать перед каждым запросом и подставлять токен в хэдер авторизэйшен\n\nexport {\n    $host,\n    $authHost\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA,MAAME,eAAe,GAAGC,MAAM,IAAI;EAC9BA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;EACzE,OAAOJ,MAAM;AACjB,CAAC;AAEDF,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC,EAAC;;AAEpD,SACIJ,KAAK,EACLG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}